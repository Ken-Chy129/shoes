<?xml version="1.0" encoding="UTF-8" ?>
<!--文件命名为logback.xml或logback-spring.xml，建议logback-spring.xml-->

<!--
属性	            可选值	                                              说明            	                                             备注
scan	        true|false	                                          开启扫描，配置变更时logback自动更新配置	                             默认空，即false
scanPeriod	    30 (|milli(second)?|second(e)?|minute|hour|day)s?	  扫描间隔： 数字 + 空格 + 日期单位	                                 默认一分钟,若不指定时间单位，默认毫秒
debug	        true|false	                                          注册OnConsoleStatusListener的简写模式，控制台输出logback内部日志	 默认false
packagingData	true|false	                                          每行日志都输出包信息其所在jar包信息	                                 对性能影响较大，1.1.4及以上版本默认false
-->
<configuration>

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="log" />

    <!--控制台日志， 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--文件日志， 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/application.log.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>3</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--文件日志， 按照每天生成日志文件 -->
    <appender name="SERVICE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/service.log.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>3</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--
        name: 用来指定受此loger约束的某一个包或者具体的某一个类。
        level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL和OFF，还有一个特殊值INHERITED或者同义词NULL，代表强制执行上级的级别。 如果未设置此属性，那么当前loger将会继承上级的级别。
        additivity: 是否向上级logger传递打印信息。默认是true。可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个logger。
    -->
    <logger name="cn.ken.shoes.service" additivity="false" level="INFO">
        <appender-ref ref="SERVICE"/>
    </logger>

    <!--文件日志， 按照每天生成日志文件 -->
    <appender name="HTTP" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/http.log.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>3</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <logger name="cn.ken.shoes.util.HttpUtil" additivity="false" level="INFO">
        <appender-ref ref="HTTP"/>
    </logger>

    <!--文件日志， 按照每天生成日志文件 -->
    <appender name="CLIENT" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/client.log.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>3</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <logger name="cn.ken.shoes.client" additivity="false" level="INFO">
        <appender-ref ref="CLIENT"/>
    </logger>

    <!--文件日志， 按照每天生成日志文件 -->
    <appender name="SCHEDULER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/scheduler.log.%d{yyyy-MM-dd}.%i</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>3</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <logger name="cn.ken.shoes.scheduler" additivity="false" level="INFO">
        <appender-ref ref="SCHEDULER"/>
    </logger>

    <logger name="org.springframework" level="INFO"/>
    <logger name="com.alibaba.druid" level="INFO"/>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="FILE"/>
        <appender-ref ref="STDOUT"/>
    </root>

</configuration>

